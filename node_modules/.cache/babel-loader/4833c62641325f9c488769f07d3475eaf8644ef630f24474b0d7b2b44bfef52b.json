{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\riama\\\\OneDrive\\\\Escritorio\\\\Framework-de-React-js\\\\src\\\\pages\\\\home.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  var _pokemons$find;\n  const [pokemons, setPokemons] = useState([]);\n  const [selectedPokemon, setSelectedPokemon] = useState(null);\n  useEffect(() => {\n    axios.get(\"https://pokeapi.co/api/v2/pokemon?offset=0&limit=151\").then(response => {\n      setPokemons(response.data.results);\n    }).catch(error => {\n      console.error(\"Error fetching data: \", error);\n    });\n  }, []);\n  const getPokemonImage = name => {\n    return `https://img.pokemondb.net/sprites/omega-ruby-alpha-sapphire/dex/normal/${name.toLowerCase()}.png`;\n  };\n\n  // Función para obtener detalles de un Pokémon específico\n  const fetchPokemonDetails = async pokemonUrl => {\n    try {\n      const response = await axios.get(pokemonUrl);\n      // Procesa la respuesta y extrae la información relevante\n      const details = {\n        number: response.data.id,\n        height: response.data.height,\n        weight: response.data.weight,\n        types: response.data.types.map(type => type.type.name),\n        moves: response.data.moves.map(move => move.move.name)\n        // Otros detalles según la API de Pokémon\n      };\n      setSelectedPokemon(details);\n    } catch (error) {\n      console.error(\"Error fetching Pokemon details: \", error);\n    }\n  };\n  const handlePokemonClick = pokemon => {\n    // Cuando se hace clic en un Pokémon, obtén sus detalles\n    fetchPokemonDetails(pokemon.url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [pokemons.map(pokemon => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Content\",\n      onClick: () => handlePokemonClick(pokemon),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: getPokemonImage(pokemon.name),\n        alt: pokemon.name,\n        style: {\n          width: \"100px\",\n          height: \"100px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), pokemon.name]\n    }, pokemon.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)), selectedPokemon && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Detalles de\", \" \", (_pokemons$find = pokemons.find(p => p.url === selectedPokemon.url)) === null || _pokemons$find === void 0 ? void 0 : _pokemons$find.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"N\\xFAmero: \", selectedPokemon.number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Altura: \", selectedPokemon.height]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Peso: \", selectedPokemon.weight]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tipo(s): \", selectedPokemon.types.join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Movimientos: \", selectedPokemon.moves.join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"lCBh1WxqARmu6jMRsGT+9i8ZxYU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["axios","useEffect","useState","jsxDEV","_jsxDEV","Home","_s","_pokemons$find","pokemons","setPokemons","selectedPokemon","setSelectedPokemon","get","then","response","data","results","catch","error","console","getPokemonImage","name","toLowerCase","fetchPokemonDetails","pokemonUrl","details","number","id","height","weight","types","map","type","moves","move","handlePokemonClick","pokemon","url","children","className","onClick","src","alt","style","width","fileName","_jsxFileName","lineNumber","columnNumber","find","p","join","_c","$RefreshReg$"],"sources":["C:/Users/riama/OneDrive/Escritorio/Framework-de-React-js/src/pages/home.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\ninterface Pokemon {\r\n  name: string;\r\n  url: string;\r\n}\r\n\r\ninterface PokemonDetails {\r\n  // Define la interfaz para los detalles del Pokémon según tu necesidad\r\n  number: number;\r\n  height: number;\r\n  weight: number;\r\n  types: string[];\r\n  moves: string[];\r\n  // Otros detalles que desees mostrar\r\n}\r\n\r\nconst Home = () => {\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n  const [selectedPokemon, setSelectedPokemon] = useState<PokemonDetails | null>(\r\n    null\r\n  );\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://pokeapi.co/api/v2/pokemon?offset=0&limit=151\")\r\n      .then((response) => {\r\n        setPokemons(response.data.results);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error);\r\n      });\r\n  }, []);\r\n\r\n  const getPokemonImage = (name: string) => {\r\n    return `https://img.pokemondb.net/sprites/omega-ruby-alpha-sapphire/dex/normal/${name.toLowerCase()}.png`;\r\n  };\r\n\r\n  // Función para obtener detalles de un Pokémon específico\r\n  const fetchPokemonDetails = async (pokemonUrl: string) => {\r\n    try {\r\n      const response = await axios.get(pokemonUrl);\r\n      // Procesa la respuesta y extrae la información relevante\r\n      const details: PokemonDetails = {\r\n        number: response.data.id,\r\n        height: response.data.height,\r\n        weight: response.data.weight,\r\n        types: response.data.types.map((type: any) => type.type.name),\r\n        moves: response.data.moves.map((move: any) => move.move.name),\r\n        // Otros detalles según la API de Pokémon\r\n      };\r\n      setSelectedPokemon(details);\r\n    } catch (error) {\r\n      console.error(\"Error fetching Pokemon details: \", error);\r\n    }\r\n  };\r\n\r\n  const handlePokemonClick = (pokemon: Pokemon) => {\r\n    // Cuando se hace clic en un Pokémon, obtén sus detalles\r\n    fetchPokemonDetails(pokemon.url);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {pokemons.map((pokemon) => (\r\n        <div\r\n          className=\"Content\"\r\n          key={pokemon.name}\r\n          onClick={() => handlePokemonClick(pokemon)}\r\n        >\r\n          <img\r\n            src={getPokemonImage(pokemon.name)}\r\n            alt={pokemon.name}\r\n            style={{ width: \"100px\", height: \"100px\" }}\r\n          />\r\n          {pokemon.name}\r\n        </div>\r\n      ))}\r\n\r\n      {/* Muestra los detalles del Pokémon seleccionado */}\r\n      {selectedPokemon && (\r\n        <div>\r\n          <h2>\r\n            Detalles de{\" \"}\r\n            {pokemons.find((p) => p.url === selectedPokemon.url)?.name}\r\n          </h2>\r\n          <p>Número: {selectedPokemon.number}</p>\r\n          <p>Altura: {selectedPokemon.height}</p>\r\n          <p>Peso: {selectedPokemon.weight}</p>\r\n          <p>Tipo(s): {selectedPokemon.types.join(\", \")}</p>\r\n          <p>Movimientos: {selectedPokemon.moves.join(\", \")}</p>\r\n          {/* Mostrar otros detalles según la necesidad */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}